//partial carrying all the grid and layout related styling 
html, body{
    margin: 0;
    padding: 0;
    // transition: 1s ease-in;
    scroll-behavior: smooth;
}
body {
    font-family: $font-stack;
    width: 100vw;
    overflow-x: hidden;
}
/* Plain old CSS WAY to do configure the grid
Keeping for the reference
.col1{
	grid-column: 1;
	grid-row: 1;
    // background-color: lightgray;
    padding: 0px 10px 0 10px
}
.col2{
	grid-column: 2;
	grid-row: 1;
    // background-color: lightgray;
    padding: 0px 10px 0 10px;
}

.col3{
	grid-column: 3;
	grid-row: 1;
    // background-color: lightgray;
    padding: 0px 10px 0 10px;

}
.col4{
	grid-column: 4;
	grid-row: 1;
    // background-color: lightgray;
    padding: 0px 10px 0 10px;
    
}
*/

/*SCSS Construct FOR Loop to generate columns for the CSS Grid*/
@for $i from 1 through 4{ //iterates the i from 1 to 4
    .#{$col-slug}#{$i}{ //col-slug taken from variables basically says 'col' to denote classname .col1, .col2, and so on
        grid-column: $i; //puts value of i in column number
	    grid-row: 1;
        padding: 0px 10px 0 10px
    }
}
.gridOf2{
    display: grid;
	grid-template-columns: 1fr 1fr;
	grid-column-gap: 5%; 
    width: inherit; 
 	height: inherit;
}
.gridOf3{
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-column-gap: 5%; 
	grid-row-gap: 20px;
 	width: inherit; 
     height: inherit;
}
.gridOf4{
	display: grid;
	grid-template-columns: 1fr 1fr 1fr 1fr;
	grid-column-gap: 2.5%; 
 	width: inherit; 
 	height: inherit;
}